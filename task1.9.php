<?php
//Задачи на математические функции PHP
//Задача. Найдите корень из числа 1000.  В массив
//$arr запишите первым элементом корень из числа, вторым элементом - округление
//в меньшую сторону, третьим элементом - в большую.
//$a = 1000;
//$arr = [];
//$arr[] =  sqrt($a);
//$arr[] =  floor(sqrt($a));
//$arr[] = ceil(sqrt($a));
//echo var_dump($arr);

//Задача. Заполните массив 30-ю случайными числами от 1 до 10.
//
//$arr = [] ;
//for ($i = 0; $i <30; $i++ ) {
//    $arr[$i] = mt_rand(1,10);
//}
//echo var_dump($arr);

//Даны переменные $a=10 и $b=3. Найдите остаток от деления $a на $b.
//$a = 10;
//$b = 3;
//echo $a % $b;
//Даны переменные $a и $b. Проверьте, что $a делится без остатка на $b. Если это так -
//выведите 'Делится' и результат деления, иначе выведите 'Делится с остатком' и остаток от деления. Показать решение.
//$a = 10;
//$b = 3;
//$result = $a / $b;
//if(!($a % $b)) {
//    echo "Делится  $result";
//} else {
//    echo "Делится с остатком". ' '.($a % $b);
//}

//Работа со степенью и корнем
//Возведите 2 в 10 степень. Результат запишите в переменную $st.
//$st = 2 ** 10;
//Найдите квадратный корень из 245.
$a = sqrt(245);
//echo $st."   ".$a;
// Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите корень из
//суммы квадратов его элементов. Для решения воспользуйтесь циклом foreach.
//$arr = [4, 2, 5, 19, 13, 0, 10];
//$result = 0;
//foreach ( $arr as $value ) {
//    $result += pow( $value,2 );
//}
//echo sqrt($result);

//Работа с функциями округления
//Для решения задач данного блока вам понадобятся следующие функции: round, ceil, floor.
//Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых.
//$a = (sqrt(379));
//echo round($a,0);
//echo round($a,1);
//echo round($a,2);

//Найдите квадратный корень из 587. Округлите результат в большую и меньшую сторону, запишите результаты округления в ассоциативный массив с ключами 'floor' и 'ceil'.
//$a = sqrt(587);
//$arr = ['floor' => floor($a),
//        'ceil'=> ceil($a)];
//Работа с min и max
//Для решения задач данного блока вам понадобятся следующие функции: min, max.
//Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное число.
//$arr = [4, -2, 5, 19, -130, 0, 10];
//$minNumber = min($arr);
//$maxNumber = max($arr);
//echo $minNumber. '   ';
//echo $maxNumber;
//Работа с рандомом
//Для решения задач данного блока вам понадобятся следующие функции: mt_rand.
//Выведите на экран случайное число от 1 до 100.
//echo mt_rand(1,100);
// Заполните массив 10-ю случайными числами. Подсказка: нужно воспользоваться циклами for или while. Показать решение.
//$arr = [];
//for ( $i = 0; $i<10; $i++ ) {
//    $arr[$i] = mt_rand();
//}
//var_dump($arr);
//Работа с модулем
//Для решения задач данного блока вам понадобятся следующие функции: abs.
//Даны переменные $a и $b. Найдите найдите модуль разности $a и $b. Проверьте работу скрипта самостоятельно для различных $a и $b.
//$a = 5;
//$b =  24;
//echo abs($a-$b);
//Дан массив в числами, к примеру [1, 2, -1, -2, 3, -3]. Создайте из него новый массив так, чтобы отрицательные числа
//стали положительными, то есть у нас должен получиться такой массив: [1, 2, 1, 2, 3, 3].
//$arr = [1, 2, -1, -2, 3, -3];
//$arrLen = count($arr)-1;
//
//foreach ($arr as &$value) {
//    $value = abs($value);
//    echo $value;
//}
//print_r($arr);
//
//Задачи
// Дано число, например 30. У этого числа есть делители - числа, на которое оно делится без остатка.
//Делители числа 30 - это 1, 2, 3, 5, 6, 10, 15, 30. Задача: сделайте массив делителей нашего числа. Число может быть любым, не обязательно, 30.
//$a= 30;
//$arr = [];
//for( $i = 1; $i <$a; $i++  )
//if ($a % $i == 0) {
//    $arr[] = $i;
//}
//echo print_r($arr);

// Дан массив [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]. Узнайте, сколько первых элементов массива нужно сложить, чтобы сумма получилась больше 10.
//$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
$result = 0;
$i = 0;
foreach ($arr as $value) {
    $result += $value;
    $i++;
    if($result > 10) {; break;
    } else {
        continue;
    }
}
echo $i;
